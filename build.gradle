import java.text.SimpleDateFormat

plugins {
    id 'checkstyle'
    id "com.github.spotbugs" version "4.7.1"
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
    id 'maven-publish'
}

group = "com.snowypeaksystems.cwcommons"

SimpleDateFormat sdf = new SimpleDateFormat("yyMMdd-HHmm")
sdf.setTimeZone(TimeZone.getTimeZone("UTC"))
String shortVersion = sdf.format(new Date()).toString()
if (hasProperty('ver')) {
    if (ver.charAt(0) == "v") {
        shortVersion = ver.substring(1)
    } else {
        shortVersion = ver
    }
}

version = shortVersion + "-SNAPSHOT"

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    maven {
        url 'https://mvn.snowypeaksystems.com/repository/maven-public/'
    }
}

dependencies {
    compileOnly 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.2.3'
    implementation 'io.papermc:paperlib:1.0.6'
    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
    testCompileOnly 'com.github.spotbugs:spotbugs-annotations:3.1.2'
    testImplementation 'com.destroystokyo.paper:paper-api:1.16.5-R0.1-SNAPSHOT'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
}

test {
    useJUnitPlatform()
}

processResources {
    filesMatching("**/plugin.yml") {
        expand ( NAME: rootProject.name, VERSION: version, PACKAGE: project.group.toString() )
    }
}

checkstyle {
    toolVersion '8.42'
    maxWarnings = 0
}

tasks.withType(Checkstyle) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

spotbugsMain {
    reports {
        xml.enabled false
        html.enabled true
    }
}

spotbugsTest {
    reports {
        xml.enabled false
        html.enabled true
    }
}

shadowJar {
    archiveClassifier.set('')
    relocate 'io.papermc.lib', 'shadow.io.papermc.paperlib'
    minimize()
}

URI mavenRepoUri = uri("https://mvn.snowypeaksystems.com/repository/maven-snapshots/")
String buildDir = buildDir.toString() + File.separator + 'libs' + File.separator
publishing {
    repositories {
        maven {
            url = mavenRepoUri
            credentials {
                username = System.getenv("SPS_MVN_USER")
                password = System.getenv("SPS_MVN_PASS")
            }
        }
    }
    publications {
        spsmvn(MavenPublication) {
            artifact file(buildDir + rootProject.name + '-' + version + '.jar')
        }
    }
}

jar.enabled = false
assemble.dependsOn(shadowJar)
publish.dependsOn(build)

task release {
    dependsOn publish

    doFirst {
        version = shortVersion
        mavenRepoUri = uri("https://mvn.snowypeaksystems.com/repository/maven-releases/")
    }

    doLast {
        file(buildDir + rootProject.name + '-' + version + '.jar')
                .renameTo(rootProject.name + '.jar')
    }
}